From stable+bounces-191751-greg=kroah.com@vger.kernel.org Thu Oct 30 17:14:03 2025
From: Amelia Crate <acrate@waldn.net>
Date: Thu, 30 Oct 2025 11:08:32 -0500
Subject: udmabuf: fix a buf size overflow issue during udmabuf creation
To: gregkh@linuxfoundation.org
Cc: dimitri.ledkov@surgut.co.uk, stable@vger.kernel.org, Xiaogang Chen <xiaogang.chen@amd.com>, Amelia Crate <acrate@waldn.net>
Message-ID: <20251030160942.19490-3-acrate@waldn.net>

From: Xiaogang Chen <xiaogang.chen@amd.com>

[ Upstream commit 021ba7f1babd029e714d13a6bf2571b08af96d0f ]

by casting size_limit_mb to u64  when calculate pglimit.

Signed-off-by: Xiaogang Chen<Xiaogang.Chen@amd.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20250321164126.329638-1-xiaogang.chen@amd.com
Signed-off-by: Christian KÃ¶nig <christian.koenig@amd.com>
Signed-off-by: Amelia Crate <acrate@waldn.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/dma-buf/udmabuf.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/dma-buf/udmabuf.c
+++ b/drivers/dma-buf/udmabuf.c
@@ -350,7 +350,7 @@ static long udmabuf_create(struct miscde
 		return -ENOMEM;
 
 	INIT_LIST_HEAD(&ubuf->unpin_list);
-	pglimit = (size_limit_mb * 1024 * 1024) >> PAGE_SHIFT;
+	pglimit = ((u64)size_limit_mb * 1024 * 1024) >> PAGE_SHIFT;
 	for (i = 0; i < head->count; i++) {
 		if (!PAGE_ALIGNED(list[i].offset))
 			goto err;
