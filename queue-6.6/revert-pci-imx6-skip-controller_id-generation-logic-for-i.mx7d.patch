From stable+bounces-139572-greg=kroah.com@vger.kernel.org Sun May  4 21:15:30 2025
From: Ryan Matthews <ryanmatthews@fastmail.com>
Date: Sun,  4 May 2025 15:13:55 -0400
Subject: Revert "PCI: imx6: Skip controller_id generation logic for i.MX7D"
To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Cc: Richard Zhu <hongxing.zhu@nxp.com>, Lucas Stach <l.stach@pengutronix.de>, stable@vger.kernel.org, linux-pci@vger.kernel.org, Ryan Matthews <ryanmatthews@fastmail.com>
Message-ID: <20250504191356.17732-2-ryanmatthews@fastmail.com>

From: Ryan Matthews <ryanmatthews@fastmail.com>

This reverts commit 2a12efc567a270a155e3b886258297abd79cdea0 which is
commit f068ffdd034c93f0c768acdc87d4d2d7023c1379 upstream.

This is a backport mistake.

Deleting "IMX7D" here skips more than just controller_id logic. It skips
reset assignments too, which causes:

 imx6q-pcie 33800000.pcie: PCIe PLL lock timeout

In my case, in addition to broken PCIe, kernel boot hangs entirely.

This isn't a problem upstream because before this, they moved the rest of
the code out of the switch case.

Signed-off-by: Ryan Matthews <ryanmatthews@fastmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/pci/controller/dwc/pci-imx6.c |    1 +
 1 file changed, 1 insertion(+)

--- a/drivers/pci/controller/dwc/pci-imx6.c
+++ b/drivers/pci/controller/dwc/pci-imx6.c
@@ -1281,6 +1281,7 @@ static int imx6_pcie_probe(struct platfo
 	switch (imx6_pcie->drvdata->variant) {
 	case IMX8MQ:
 	case IMX8MQ_EP:
+	case IMX7D:
 		if (dbi_base->start == IMX8MQ_PCIE2_BASE_ADDR)
 			imx6_pcie->controller_id = 1;
 
